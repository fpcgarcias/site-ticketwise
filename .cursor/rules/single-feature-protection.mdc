---
description: 
globs: 
alwaysApply: true
---
# Prote√ß√£o de Funcionalidades e Implementa√ß√£o Incremental

## ‚ö†Ô∏è REGRA CR√çTICA - UMA FUNCIONALIDADE POR VEZ

**IMPLEMENTE APENAS UMA FUNCIONALIDADE POR VEZ E JAMAIS ALTERE FUNCIONALIDADES EXISTENTES SEM AUTORIZA√á√ÉO.**

### Princ√≠pios Fundamentais:

1. **Uma Funcionalidade por Implementa√ß√£o**:
   - Foque em APENAS uma funcionalidade por vez
   - Complete totalmente antes de passar para outra
   - N√£o misture implementa√ß√µes diferentes na mesma sess√£o

2. **Prote√ß√£o Absoluta do C√≥digo Existente**:
   - **JAMAIS** altere funcionalidades que j√° est√£o funcionando
   - N√£o modifique c√≥digo existente a menos que seja especificamente solicitado
   - Preserve todo comportamento atual das funcionalidades

3. **Antes de Alterar C√≥digo Existente**:
   - Sempre perguntar: "Posso modificar a funcionalidade X para implementar Y?"
   - Aguardar autoriza√ß√£o expl√≠cita do usu√°rio
   - Explicar exatamente o que ser√° alterado e por qu√™

### Diretrizes de Implementa√ß√£o:

#### ‚úÖ PERMITIDO:
- Adicionar novos arquivos
- Criar novas fun√ß√µes/componentes
- Implementar nova funcionalidade isoladamente
- Corrigir bugs quando especificamente solicitado

#### ‚ùå PROIBIDO SEM AUTORIZA√á√ÉO:
- Modificar fun√ß√µes/componentes existentes
- Alterar estrutura de dados j√° funcionando
- Refatorar c√≥digo que est√° funcionando
- Mudar APIs ou interfaces existentes
- Remover ou renomear vari√°veis/fun√ß√µes existentes

### Processo de Implementa√ß√£o:

1. **An√°lise Pr√©via**:
   - Identificar exatamente o que ser√° implementado
   - Verificar se afeta c√≥digo existente
   - Se afetar, PERGUNTAR ANTES

2. **Implementa√ß√£o Isolada**:
   - Criar novos arquivos quando poss√≠vel
   - Usar padr√µes de extens√£o (n√£o modifica√ß√£o)
   - Manter funcionalidades existentes intocadas

3. **Integra√ß√£o Cuidadosa**:
   - Integrar apenas nos pontos m√≠nimos necess√°rios
   - Manter compatibilidade total
   - Testar que nada quebrou

### üö® LEMBRETES CONSTANTES:

- **"Esta altera√ß√£o pode quebrar algo que j√° funciona?"** ‚Üí SE SIM, PERGUNTE PRIMEIRO
- **"Estou modificando c√≥digo existente?"** ‚Üí SE SIM, PERGUNTE PRIMEIRO
- **"Posso implementar isso sem tocar no que j√° existe?"** ‚Üí SEMPRE PREFIRA ESTA ABORDAGEM

### Quando em D√∫vida:
**SEMPRE escolha a abordagem mais conservadora e pergunte ao usu√°rio antes de modificar qualquer coisa que j√° est√° funcionando.**
